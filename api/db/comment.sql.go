// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: comment.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const listCommentsByAuthor = `-- name: ListCommentsByAuthor :many
SELECT
  id,
  recipe_id,
  author_id,
  content,
  post_date
FROM
  recipe_comments
WHERE
  author_id = $1 AND post_date > $2
ORDER BY post_date
LIMIT $3
`

type ListCommentsByAuthorParams struct {
	AuthorID int64
	PostDate pgtype.Timestamp
	Limit    int32
}

func (q *Queries) ListCommentsByAuthor(ctx context.Context, arg ListCommentsByAuthorParams) ([]RecipeComment, error) {
	rows, err := q.db.Query(ctx, listCommentsByAuthor, arg.AuthorID, arg.PostDate, arg.Limit)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []RecipeComment
	for rows.Next() {
		var i RecipeComment
		if err := rows.Scan(
			&i.ID,
			&i.RecipeID,
			&i.AuthorID,
			&i.Content,
			&i.PostDate,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
