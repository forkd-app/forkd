// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: upsert_rating.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const upsertRating = `-- name: UpsertRating :one
INSERT INTO ratings (
  revision_id,
  user_id,
  star_value
)
VALUES (
  $1::uuid,
  $2::uuid,
  $3::smallint
)
ON CONFLICT (revision_id, user_id)
DO UPDATE SET star_value = EXCLUDED.star_value
RETURNING
  revision_id,
  user_id,
  star_value
`

type UpsertRatingParams struct {
	RevisionID pgtype.UUID
	UserID     pgtype.UUID
	StarValue  int16
}

func (q *Queries) UpsertRating(ctx context.Context, arg UpsertRatingParams) (Rating, error) {
	row := q.db.QueryRow(ctx, upsertRating, arg.RevisionID, arg.UserID, arg.StarValue)
	var i Rating
	err := row.Scan(&i.RevisionID, &i.UserID, &i.StarValue)
	return i, err
}
