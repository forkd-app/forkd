// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: create_session.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createSession = `-- name: CreateSession :one
WITH sesh AS (
  INSERT INTO
    sessions (
      user_id,
      expiry
    )
  VALUES (
    $1,
    $2
  )
  RETURNING
    sessions.id,
    sessions.user_id
)
SELECT users.id, users.display_name, users.email, users.join_date, users.updated_at, users.photo, sesh.id FROM sesh INNER JOIN users ON sesh.user_id = users.id
`

type CreateSessionParams struct {
	UserID pgtype.UUID
	Expiry pgtype.Timestamp
}

type CreateSessionRow struct {
	User User
	ID   pgtype.UUID
}

func (q *Queries) CreateSession(ctx context.Context, arg CreateSessionParams) (CreateSessionRow, error) {
	row := q.db.QueryRow(ctx, createSession, arg.UserID, arg.Expiry)
	var i CreateSessionRow
	err := row.Scan(
		&i.User.ID,
		&i.User.DisplayName,
		&i.User.Email,
		&i.User.JoinDate,
		&i.User.UpdatedAt,
		&i.User.Photo,
		&i.ID,
	)
	return i, err
}
