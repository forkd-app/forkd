// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: get_recipe_by_slug.sql

package db

import (
	"context"
)

const getRecipeBySlug = `-- name: GetRecipeBySlug :one
SELECT
  recipes.id,
  recipes.author_id,
  recipes.slug,
  recipes.private,
  recipes.initial_publish_date,
  recipes.forked_from,
  recipes.featured_revision
FROM
  recipes
JOIN
  users ON users.id = recipes.author_id
WHERE
  lower(recipes.slug) = lower($1::text) AND lower(users.display_name) = lower($2::text)
LIMIT 1
`

type GetRecipeBySlugParams struct {
	Slug        string
	DisplayName string
}

func (q *Queries) GetRecipeBySlug(ctx context.Context, arg GetRecipeBySlugParams) (Recipe, error) {
	row := q.db.QueryRow(ctx, getRecipeBySlug, arg.Slug, arg.DisplayName)
	var i Recipe
	err := row.Scan(
		&i.ID,
		&i.AuthorID,
		&i.Slug,
		&i.Private,
		&i.InitialPublishDate,
		&i.ForkedFrom,
		&i.FeaturedRevision,
	)
	return i, err
}
