package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"forkd/graph/model"
)

// Recipes is the resolver for the recipes field.
func (r *userResolver) Recipes(ctx context.Context, obj *model.User, input *model.ListRecipeInput) (*model.PaginatedRecipes, error) {
	if input == nil {
		sortCol := model.ListRecipeSortColPublishDate
		sortDir := model.SortDirDesc
		limit := 20
		input = &model.ListRecipeInput{
			AuthorID: &obj.ID,
			SortCol:  &sortCol,
			SortDir:  &sortDir,
			Limit:    &limit,
		}
	} else {
		input.AuthorID = &obj.ID
	}
	return r.RecipeService.ListRecipes(ctx, input)
}

// User returns UserResolver implementation.
func (r *Resolver) User() UserResolver { return &userResolver{r} }

type userResolver struct{ *Resolver }
