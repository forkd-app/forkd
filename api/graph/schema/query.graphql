type Query {
  user: UserQuery
  recipe: RecipeQuery
}

type UserQuery {
  byId(id: UUID!): User @goField(forceResolver: true)
  byDisplayName(displayName: String!): User @goField(forceResolver: true)
  byEmail(email: String!): User @goField(forceResolver: true)
  current: User @auth(required: true) @goField(forceResolver: true)
}

type RecipeQuery {
  byId(id: UUID!): Recipe @goField(forceResolver: true)
  bySlug(authorDisplayName: String!, slug: String!): Recipe
    @goField(forceResolver: true)
  list(input: ListRecipeInput): PaginatedRecipes! @goField(forceResolver: true)
}

enum SortDir {
  ASC
  DESC
}

enum ListRecipeSortCol {
  PUBLISH_DATE
  SLUG
}

input ListRecipeInput {
  authorId: UUID
  publishStart: Time
  publishEnd: Time
  sortCol: ListRecipeSortCol = PUBLISH_DATE
  sortDir: SortDir = DESC
  limit: Int = 20
  nextCursor: String
  query: String
}
