type Recipe {
  initialPublishDate: String! #ToDo: update with timestamp type
  author: User! @goField(forceResolver: true)
  slug: String!
  forkedFrom: Int
  id: ID!
  description: String!
  recipeRevisions(limit: Int, nextCursor: String): PaginatedRecipeRevisions!
    @goField(forceResolver: true)
}

type RecipeComment {
  revision: RecipeRevision! @goField(forceResolver: true)
  postDate: String! #ToDo: update with timestamp type
  recipe: Recipe! @goField(forceResolver: true)
  author: User! @goField(forceResolver: true)
  content: String!
}

type RecipeRevision {
  publishDate: String! #ToDo: update with timestamp type
  recipe: Recipe! @goField(forceResolver: true)
  description: String
  id: ID!
}

type RecipeStep {
  id: ID!
  revision: RecipeRevision! @goField(forceResolver: true)
  content: String!
  index: Int!
}

type PaginatedRecipes implements PaginatedResult {
  recipes: [Recipe!]!
  pagination: PaginationInfo!
}

type PaginatedComments implements PaginatedResult {
  comments: [RecipeComment!]!
  pagination: PaginationInfo!
}

type PaginatedRecipeRevisions implements PaginatedResult {
  revisions: [RecipeRevision!]!
  pagination: PaginationInfo!
}
